Resources:
  ConfigRule01:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-01-root-mfa-check"
      Description: "Checks whether the AWS account root user has multi-factor authentication (MFA) enabled."
      Source:
        Owner: "AWS"
        SourceIdentifier: "ROOT_ACCOUNT_MFA_ENABLED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::IAM::User"

  ConfigRule02:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-02-root-account-usage-check"
      Description: "Checks whether the root account has been used in the last 24 hours."
      Source:
        Owner: "AWS"
        SourceIdentifier: "ROOT_ACCOUNT_USED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::IAM::User"

  ConfigRule03:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-03-root-account-access-key-check"
      Description: "Checks whether the root account has active access keys."
      Source:
        Owner: "AWS"
        SourceIdentifier: "IAM_ROOT_ACCESS_KEY_CHECK"
      Scope:
        ComplianceResourceTypes:
          - "AWS::IAM::User"

  ConfigRule04:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-04-iam-user-access-key-check"
      Description: "Checks whether IAM users have access keys that have been rotated within the specified number of days."
      Source:
        Owner: "AWS"
        SourceIdentifier: "IAM_USER_ACCESS_KEY_ROTATED"
      InputParameters:
        maxAccessKeyAge: 90
      Scope:
        ComplianceResourceTypes:
          - "AWS::IAM::User"

  ConfigRule05:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-05-iam-password-policy-check"
      Description: "Checks whether the account password policy for IAM users meets the specified requirements."
      Source:
        Owner: "AWS"
        SourceIdentifier: "IAM_PASSWORD_POLICY"
      Scope:
        ComplianceResourceTypes:
          - "AWS::IAM::User"

  ConfigRule06:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-06-iam-policy-no-administrative-privileges-check"
      Description: "Checks that no IAM policies grant administrative privileges."
      Source:
        Owner: "AWS"
        SourceIdentifier: "IAM_POLICY_NO_ADMINISTRATIVE_PRIVILEGES"
      Scope:
        ComplianceResourceTypes:
          - "AWS::IAM::Policy"

  ConfigRule09:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-09-ec2-instance-profile-check"
      Description: "Checks whether your EC2 instances are using an instance profile."
      Source:
        Owner: "AWS"
        SourceIdentifier: "EC2_INSTANCE_PROFILE_ATTACHED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::EC2::Instance"

  ConfigRule10:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-10-cloudwatch-log-group-encrypted-check"
      Description: "Checks whether CloudWatch log groups are encrypted."
      Source:
        Owner: "AWS"
        SourceIdentifier: "CLOUDWATCH_LOG_GROUP_ENCRYPTED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::Logs::LogGroup"

  ConfigRule11:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-11-ec2-no-public-ip-check"
      Description: "Checks that EC2 instances do not have public IP addresses."
      Source:
        Owner: "AWS"
        SourceIdentifier: "EC2_INSTANCE_NO_PUBLIC_IP"
      Scope:
        ComplianceResourceTypes:
          - "AWS::EC2::Instance"

  ConfigRule12:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-12-ami-not-public-check"
      Description: "Checks that AMIs are not public."
      Source:
        Owner: "AWS"
        SourceIdentifier: "AMI_NOT_PUBLIC"
      Scope:
        ComplianceResourceTypes:
          - "AWS::EC2::Image"

  ConfigRule22:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-22-vpc-flow-logs-enabled"
      Description: "Checks whether Amazon Virtual Private Cloud (VPC) flow logs are enabled."
      Source:
        Owner: "AWS"
        SourceIdentifier: "VPC_FLOW_LOGS_ENABLED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::EC2::VPC"

  ConfigRule23a:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-23-incoming-ssh-disabled"
      Description: "Checks whether security groups that are in use disallow unrestricted incoming SSH traffic."
      Source:
        Owner: "AWS"
        SourceIdentifier: "INCOMING_SSH_DISABLED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::EC2::SecurityGroup"

  ConfigRule23b:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-23-restricted-incoming-traffic"
      Description: "Checks whether security groups that are in use allow unrestricted incoming traffic for the specified IP addresses."
      Source:
        Owner: "AWS"
        SourceIdentifier: "RESTRICTED_INCOMING_TRAFFIC"
      Scope:
        ComplianceResourceTypes:
          - "AWS::EC2::SecurityGroup"

  ConfigRule24:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-24-elb-custom-security-policy-ssl-check"
      Description: "Checks whether your Classic Load Balancer is using a custom security policy."
      Source:
        Owner: "AWS"
        SourceIdentifier: "ELB_CUSTOM_SECURITY_POLICY_SSL_CHECK"
      Scope:
        ComplianceResourceTypes:
          - "AWS::ElasticLoadBalancing::LoadBalancer"

  ConfigRule26:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-26-elbv2-listener-https-only"
      Description: "Checks whether your Application Load Balancer and Network Load Balancer listeners are configured for HTTPS."
      Source:
        Owner: "AWS"
        SourceIdentifier: "ELB_V2_LISTENER_HTTPS_ONLY"
      Scope:
        ComplianceResourceTypes:
          - "AWS::ElasticLoadBalancingV2::LoadBalancer"

  ConfigRule27:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-27-elbv2-access-logs-enabled"
      Description: "Checks whether your Application Load Balancer and Network Load Balancer have access logging enabled."
      Source:
        Owner: "AWS"
        SourceIdentifier: "ELB_V2_ACCESS_LOGS_ENABLED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::ElasticLoadBalancingV2::LoadBalancer"

  ConfigRule28:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-28-s3-bucket-server-side-encryption-enabled"
      Description: "Checks that your S3 buckets have server-side encryption enabled."
      Source:
        Owner: "AWS"
        SourceIdentifier: "S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::S3::Bucket"

  ConfigRule29a:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-29-s3-bucket-public-read-prohibited"
      Description: "Checks that your S3 buckets do not allow public read access."
      Source:
        Owner: "AWS"
        SourceIdentifier: "S3_BUCKET_PUBLIC_READ_PROHIBITED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::S3::Bucket"

  ConfigRule29b:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-29-s3-bucket-public-write-prohibited"
      Description: "Checks that your S3 buckets do not allow public write access."
      Source:
        Owner: "AWS"
        SourceIdentifier: "S3_BUCKET_PUBLIC_WRITE_PROHIBITED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::S3::Bucket"

  ConfigRule30:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-30-s3-bucket-logging-enabled"
      Description: "Checks that your S3 buckets have logging enabled."
      Source:
        Owner: "AWS"
        SourceIdentifier: "S3_BUCKET_LOGGING_ENABLED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::S3::Bucket"

  ConfigRule31:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-31-ebs-snapshot-public-restorable-check"
      Description: "Checks whether your EBS snapshots are public."
      Source:
        Owner: "AWS"
        SourceIdentifier: "EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK"
      Scope:
        ComplianceResourceTypes:
          - "AWS::EC2::Snapshot"

  ConfigRule32:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-32-encrypted-volumes"
      Description: "Checks whether the EBS volumes that are attached to EC2 instances are encrypted."
      Source:
        Owner: "AWS"
        SourceIdentifier: "ENCRYPTED_VOLUMES"
      Scope:
        ComplianceResourceTypes:
          - "AWS::EC2::Volume"

  ConfigRule33:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-33-rds-storage-encrypted"
      Description: "Checks whether storage encryption is enabled for your RDS DB instances."
      Source:
        Owner: "AWS"
        SourceIdentifier: "RDS_STORAGE_ENCRYPTED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::RDS::DBInstance"

  ConfigRule34:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-34-rds-snapshots-public-prohibited"
      Description: "Checks whether your RDS snapshots are public."
      Source:
        Owner: "AWS"
        SourceIdentifier: "RDS_SNAPSHOTS_PUBLIC_PROHIBITED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::RDS::DBSnapshot"

  ConfigRule35:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-35-rds-instance-public-access-check"
      Description: "Checks whether your RDS DB instances are publicly accessible."
      Source:
        Owner: "AWS"
        SourceIdentifier: "RDS_INSTANCE_PUBLIC_ACCESS_CHECK"
      Scope:
        ComplianceResourceTypes:
          - "AWS::RDS::DBInstance"

  ConfigRule36:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-36-rds-minor-version-upgrade-enabled"
      Description: "Checks whether your RDS DB instances have minor version upgrades enabled."
      Source:
        Owner: "AWS"
        SourceIdentifier: "RDS_MINOR_VERSION_UPGRADE_ENABLED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::RDS::DBInstance"

  ConfigRule37:
    Type: 'AWS::Config::ConfigRule'
    Properties:
      ConfigRuleName: "AWS-37-rds-logging-enabled"
      Description: "Checks whether your RDS DB instances have logging enabled."
      Source:
        Owner: "AWS"
        SourceIdentifier: "RDS_LOGGING_ENABLED"
      Scope:
        ComplianceResourceTypes:
          - "AWS::RDS::DBInstance"
